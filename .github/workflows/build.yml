name: Generate Documentation

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up yq and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          wget https://github.com/mikefarah/yq/releases/download/v4.15.1/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          
      - name: Create temp directory
        run: mkdir -p tmp

      - name: Load and merge YAML files into hots
        run: |
          if [ -n "${{ secrets.SECRET_SORT }}" ]; then
            IFS=',' read -ra SORT_FILES <<< "${{ secrets.SECRET_SORT }}"
            HOTS="[]"
            for SORT in "${SORT_FILES[@]}"; do
              FILE_PATH="docs/${SORT}.yml"
              if [ -f "$FILE_PATH" ]; then
                if FILE_CONTENT=$(yq eval -o=json "$FILE_PATH" 2>/dev/null); then
                  HOTS=$(jq --argjson new_item "$FILE_CONTENT" \
                            '. + [$new_item]' <<< "$HOTS")
                else
                  echo "Error: Failed to parse $FILE_PATH"
                  exit 1
                fi
              else
                echo "Warning: File $FILE_PATH does not exist."
              fi
            done
            echo "$HOTS" > tmp/hots.json
          else
            echo "SECRET_SORT is empty, initializing empty hots"
            echo "[]" > tmp/hots.json
          fi

      - name: Create output directory
        run: mkdir -p output

      - name: Create all.json
        run: |
          if ls docs/*.yml &> /dev/null; then
            yq eval -s '[.]' -o=json docs/*.yml > output/all.json
          else
            echo '[]' > output/all.json
          fi
          
      - name: Debug hots content  # 调试步骤
        run: |
          echo "HOTS content:"
          cat tmp/hots.json
          jq '.' tmp/hots.json || true
          
      - name: Process and combine data
        run: |
          jq --slurpfile hots tmp/hots.json \
             '{ hots: $hots[0], items: (group_by(.category) | map({ (.[0].category): . }) | add) }' \
             output/all.json > output/combined.json
             
      - name: Convert JSON to YAML
        run: |
          yq eval -P -o=yaml output/combined.json > output/combined.yaml

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          branch: gh-pages
          folder: output