name: Generate Documentation

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up yq and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          wget https://github.com/mikefarah/yq/releases/download/v4.15.1/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          
      - name: Create directories
        run: |
          mkdir -p tmp
          mkdir -p output
          
      - name: Load and merge YAML files into hots
        run: |
          if [ -n "${{ secrets.SECRET_SORT }}" ]; then
            IFS=',' read -ra SORT_FILES <<< "${{ secrets.SECRET_SORT }}"
            HOTS="[]"
            for SORT in "${SORT_FILES[@]}"; do
              FILE_PATH="docs/${SORT}.yml"
              if [ -f "$FILE_PATH" ]; then
                if FILE_CONTENT=$(yq eval -o=json "$FILE_PATH" 2>/dev/null); then
                  FILE_CONTENT=$(echo "$FILE_CONTENT" | jq --arg filename "$SORT" '. + {_filename: $filename}')
                  HOTS=$(jq --argjson new_item "$FILE_CONTENT" \
                            '. + [$new_item]' <<< "$HOTS")
                else
                  echo "Error: Failed to parse $FILE_PATH"
                  exit 1
                fi
              else
                echo "Warning: File $FILE_PATH does not exist."
              fi
            done
            echo "$HOTS" > tmp/hots.json
          else
            echo "SECRET_SORT is empty, initializing empty hots"
            echo "[]" > tmp/hots.json
          fi

      - name: Create all.json
        run: |
          if [ $(ls docs/*.yml 2>/dev/null | wc -l) -gt 0 ]; then
            mkdir -p tmp/items
            
            for file in docs/*.yml; do
              filename=$(basename "$file" .yml)
              yq eval -o=json "$file" | jq --arg filename "$filename" '. + {_filename: $filename}' > "tmp/items/${filename}.json"
            done
            
            jq -s 'sort_by(._filename)' tmp/items/*.json > output/all.json
          else
            echo '[]' > output/all.json
          fi
          
      - name: Process and combine data
        run: |
          jq --slurpfile hots tmp/hots.json \
             '{
                hots: $hots[0],
                items: map(del(._filename))
              }' \
             output/all.json > output/combined.json
             
      - name: Convert JSON to YAML
        run: |
          yq eval -P -o=yaml output/combined.json > output/combined.yaml

      - name: Add index.html
        run: |
          echo '<!DOCTYPE html>
          <html>
          <head>
            <title>Documentation</title>
            <meta http-equiv="refresh" content="0; url=combined.yaml">
          </head>
          <body>
            <p>Redirecting to <a href="combined.yaml">combined.yaml</a></p>
          </body>
          </html>' > output/index.html

      - name: prepare_site
        run: |
          mkdir site
          cp output/combined.json site/
          cp output/combined.yaml site/
          cp output/index.html site/

      - name: upload_pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - id: deploy
        uses: actions/deploy-pages@v4