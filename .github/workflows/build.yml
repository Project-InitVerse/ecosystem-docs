name: Build and Publish

on:
  push:
    branches:
      - main
      - dev
    # paths:
    #   - 'docs/*.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install-jq
        run: |
          sudo apt-get update && sudo apt-get install -y jq

      - name: read_hots
        id: hot
        run: |
          HOTS="${{ secrets.SECRET_SORT }}"
          echo "hots=$HOTS" >> $GITHUB_OUTPUT

      - name: merge_docs_to_json
        run: |
          mkdir -p output
          # load all docs into JSON array
          yq eval-all -o=json '[.]' docs/*.yml > output/all.json

      - name: extract_hots_and_rest
        run: |
          HOTS="${{ steps.hot.outputs.hots }}"
          IFS=',' read -ra HOT_ARRAY <<< "$HOTS"
          HOT_LIST=$(printf '%s\n' "${HOT_ARRAY[@]}" | jq -R -s -c 'split("\n")[:-1]')
          jq \
            --argjson list "$HOT_LIST" \
            '{ hots: ( [.[] | select(.sort as $s | $list | index($s))] ), rest: ( [.[] | select(.sort as $s | ($list | index($s)) | not)] ) }' \
            output/all.json > output/parted.json

      - name: group_items_by_category
        run: |
          jq '{hots: .hots, items: (.rest | group_by(.category) | map({ (.[0].category): . }) | add)}' output/parted.json > output/combined.json
          yq eval -P -o=yaml output/combined.json > output/combined.yaml

      - name: prepare_site
        run: |
          mkdir site
          cp output/combined.json site/
          cp output/combined.yaml site/

      - name: upload_pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - id: deploy
        uses: actions/deploy-pages@v4